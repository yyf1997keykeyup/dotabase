# Generated by Django 3.0.5 on 2020-04-22 05:04

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CorsheadersCorsmodel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cors', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'corsheaders_corsmodel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DotabaseUser',
            fields=[
                ('username', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('password', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'dotabase_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjEffect',
            fields=[
                ('effectid', models.AutoField(db_column='EffectID', primary_key=True, serialize=False)),
                ('cd', models.CharField(db_column='CD', max_length=255)),
                ('description', models.CharField(db_column='Description', max_length=255)),
            ],
            options={
                'db_table': 'proj_Effect',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjHero',
            fields=[
                ('heroid', models.AutoField(db_column='HeroID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=255)),
                ('type', models.CharField(db_column='Type', max_length=255)),
                ('attr_health', models.CharField(db_column='Attr_Health', max_length=20)),
                ('attr_damage', models.CharField(db_column='Attr_Damage', max_length=20)),
                ('attr_mana', models.CharField(db_column='Attr_Mana', max_length=20)),
                ('imageurl', models.CharField(blank=True, db_column='ImageUrl', max_length=255, null=True)),
                ('bio', models.CharField(blank=True, db_column='Bio', max_length=5000, null=True)),
            ],
            options={
                'db_table': 'proj_Hero',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjHerobadagainst',
            fields=[
                ('hbaid', models.AutoField(db_column='HBAid', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'proj_HeroBadAgainst',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjHerobestcombos',
            fields=[
                ('hbcid', models.AutoField(db_column='HBCid', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'proj_HeroBestCombos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjHerogoodagainst',
            fields=[
                ('hgaid', models.AutoField(db_column='HGAid', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'proj_HeroGoodAgainst',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjHeroLog',
            fields=[
                ('logid', models.AutoField(db_column='Logid', primary_key=True, serialize=False)),
                ('attr_health', models.CharField(blank=True, db_column='Attr_Health', max_length=255, null=True)),
                ('attr_damage', models.CharField(blank=True, db_column='Attr_Damage', max_length=255, null=True)),
                ('attr_maga', models.CharField(blank=True, db_column='Attr_Maga', max_length=255, null=True)),
                ('create_time', models.DateTimeField(blank=True, db_column='Create_Time', null=True)),
            ],
            options={
                'db_table': 'proj_hero_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjHeroSkill',
            fields=[
                ('hsid', models.AutoField(db_column='HSid', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'proj_Hero_Skill',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjHeroTalent',
            fields=[
                ('htid', models.AutoField(db_column='HTid', primary_key=True, serialize=False)),
                ('talentid', models.IntegerField(db_column='TalentID')),
                ('level', models.IntegerField(db_column='Level')),
            ],
            options={
                'db_table': 'proj_Hero_Talent',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjItem',
            fields=[
                ('itemid', models.AutoField(db_column='ItemID', primary_key=True, serialize=False)),
                ('itemname', models.CharField(db_column='ItemName', max_length=255)),
                ('category', models.CharField(db_column='Category', max_length=255)),
                ('imgurl', models.CharField(blank=True, db_column='ImgUrl', max_length=255, null=True)),
                ('info', models.CharField(blank=True, db_column='Info', max_length=16384, null=True)),
            ],
            options={
                'db_table': 'proj_Item',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjItemEffect',
            fields=[
                ('ieid', models.AutoField(db_column='IEid', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'proj_Item_Effect',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjItemRecipe',
            fields=[
                ('irpid', models.AutoField(db_column='IRpid', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'proj_Item_Recipe',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjItemRecommend',
            fields=[
                ('irdid', models.AutoField(db_column='IRdid', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'proj_Item_Recommend',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjSkill',
            fields=[
                ('skillid', models.AutoField(db_column='SkillID', primary_key=True, serialize=False)),
                ('skillname', models.CharField(db_column='SkillName', max_length=255)),
                ('imageurl', models.CharField(blank=True, db_column='ImageUrl', max_length=255, null=True)),
                ('info', models.CharField(blank=True, db_column='Info', max_length=16384, null=True)),
            ],
            options={
                'db_table': 'proj_Skill',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjSkillEffect',
            fields=[
                ('seid', models.AutoField(db_column='SEid', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'proj_Skill_Effect',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjTalent',
            fields=[
                ('talentid', models.AutoField(db_column='TalentID', primary_key=True, serialize=False)),
                ('talentname', models.CharField(db_column='TalentName', max_length=255)),
                ('info', models.CharField(blank=True, db_column='Info', max_length=16384, null=True)),
            ],
            options={
                'db_table': 'proj_Talent',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DotabaseModifyuser',
            fields=[
                ('user_ptr', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='dotabase.DotabaseUser')),
            ],
            options={
                'db_table': 'dotabase_modifyuser',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DotabaseNormaluser',
            fields=[
                ('user_ptr', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='dotabase.DotabaseUser')),
            ],
            options={
                'db_table': 'dotabase_normaluser',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DotabaseSuperuser',
            fields=[
                ('user_ptr', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='dotabase.DotabaseUser')),
            ],
            options={
                'db_table': 'dotabase_superuser',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjActiveeffect',
            fields=[
                ('effectid', models.OneToOneField(db_column='EffectID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='dotabase.ProjEffect')),
                ('type', models.CharField(db_column='Type', max_length=255)),
                ('mana', models.CharField(db_column='Mana', max_length=255)),
            ],
            options={
                'db_table': 'proj_ActiveEffect',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjPassiveeffect',
            fields=[
                ('peffectid', models.OneToOneField(db_column='PEffectID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='dotabase.ProjEffect')),
                ('type', models.CharField(db_column='Type', max_length=255)),
                ('mana', models.CharField(db_column='Mana', max_length=255)),
            ],
            options={
                'db_table': 'proj_PassiveEffect',
                'managed': False,
            },
        ),
    ]
